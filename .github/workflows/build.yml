name: Release Obsidian plugin

on:
  push:
    branches:
      - "*"

env:
  PLUGIN_NAME: obsidian-wanglin2-mindmap

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"

      - name: Build
        id: build
        run: |
          npm install          
          npm run build
          mkdir ${{ env.PLUGIN_NAME }}
          cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          TOKEN: ${{ secrets.TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload zip file
        uses: actions/upload-release-asset@v1
        env:
          TOKEN: ${{ secrets.TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload main.js
        uses: actions/upload-release-asset@v1
        env:
          TOKEN: ${{ secrets.TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.js
          asset_name: main.js
          asset_content_type: text/javascript

      - name: Upload manifest.json
        uses: actions/upload-release-asset@v1
        env:
          TOKEN: ${{ secrets.TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json

      - name: Upload styles.css
        uses: actions/upload-release-asset@v1
        env:
          TOKEN: ${{ secrets.TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./styles.css
          asset_name: styles.css
          asset_content_type: text/css
